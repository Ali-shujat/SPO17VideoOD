@page
@inject SignInManager<User> SignInManager
@model VideoOD.Admin.Pages.UserCourses.CreateModel
@{
    ViewData["Title"] = "Create User Courses";
}

@if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
{
    <div class="row">
        <div class="col-md-4 col-md-offset-4">
            <h2>@ViewData["Title"]</h2>
            <page-button path="Videos/Index" Bootstrap-style="primary" glyph="info-sign" description="Back to List"></page-button>
            <page-button path="Index" Bootstrap-style="warning" glyph="list-alt" description="Dashboard"></page-button>
            <p></p>
            <form method="post">
                <div class="form-group">
                    <label asp-for="Input.UserId" class="control-label"></label>
                    <select asp-for="Input.UserId" class="form-control" asp-items="ViewBag.Users"></select>
                </div>
                <div class="form-group">
                    <label asp-for="Input.CourseId" class="control-label"></label>
                    <select asp-for="Input.CourseId" class="form-control" asp-items="ViewBag.Courses"></select>
                </div>

                <button type="submit" class="btn btn-success">Create</button>
            </form>
        </div>
    </div>
}
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}



